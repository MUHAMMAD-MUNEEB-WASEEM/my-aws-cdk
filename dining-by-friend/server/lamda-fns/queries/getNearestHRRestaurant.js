"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const gremlin = require('gremlin');
// const order = gremlin.process.order;
const DriverRemoteConnection = gremlin.driver.DriverRemoteConnection;
const Graph = gremlin.structure.Graph;
const uri = process.env.READER;
const { order: { desc, asc } } = gremlin.process;
const { P: { gt } } = gremlin.process;
const nearestHRRestaurant = async (city) => {
    let dc = new DriverRemoteConnection(`wss://${uri}/gremlin`, {});
    const graph = new Graph();
    const g = graph.traversal().withRemote(dc);
    try {
        let data = await g.V().hasLabel('restaurant').has('rating', gt(4)).has('city', city).toList();
        let posts = Array();
        for (const v of data) {
            const _properties = await g.V(v.id).properties().toList();
            let post = _properties.reduce((acc, next) => {
                acc[next.label] = next.value;
                return acc;
            }, {});
            post.id = v.id;
            posts.push(post);
        }
        dc.close();
        return posts;
    }
    catch (err) {
        console.log('ERROR', err);
        return null;
    }
};
exports.default = nearestHRRestaurant;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0TmVhcmVzdEhSUmVzdGF1cmFudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdldE5lYXJlc3RIUlJlc3RhdXJhbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUE7QUFDbEMsdUNBQXVDO0FBQ3ZDLE1BQU0sc0JBQXNCLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQTtBQUNwRSxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQTtBQUNyQyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQTtBQUM5QixNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBQyxFQUFFLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUNqRCxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBR3RDLE1BQU0sbUJBQW1CLEdBQUcsS0FBSyxFQUFFLElBQVcsRUFBRSxFQUFFO0lBQzlDLElBQUksRUFBRSxHQUFHLElBQUksc0JBQXNCLENBQUMsU0FBUyxHQUFHLFVBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQTtJQUMvRCxNQUFNLEtBQUssR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFBO0lBQ3pCLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUE7SUFDMUMsSUFBSTtRQUNGLElBQUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUE7UUFDN0YsSUFBSSxLQUFLLEdBQUcsS0FBSyxFQUFFLENBQUE7UUFFbkIsS0FBSyxNQUFNLENBQUMsSUFBSSxJQUFJLEVBQUU7WUFDcEIsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQTtZQUN6RCxJQUFJLElBQUksR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFO2dCQUMxQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUE7Z0JBQzVCLE9BQU8sR0FBRyxDQUFBO1lBQ1osQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFBO1lBQ04sSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFBO1lBQ2QsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtTQUNqQjtRQUVELEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQTtRQUNWLE9BQU8sS0FBSyxDQUFBO0tBQ2I7SUFBQyxPQUFPLEdBQUcsRUFBRTtRQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFBO1FBQ3pCLE9BQU8sSUFBSSxDQUFBO0tBQ2Q7QUFDTCxDQUFDLENBQUE7QUFJRCxrQkFBZSxtQkFBbUIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdyZW1saW4gPSByZXF1aXJlKCdncmVtbGluJylcclxuLy8gY29uc3Qgb3JkZXIgPSBncmVtbGluLnByb2Nlc3Mub3JkZXI7XHJcbmNvbnN0IERyaXZlclJlbW90ZUNvbm5lY3Rpb24gPSBncmVtbGluLmRyaXZlci5Ecml2ZXJSZW1vdGVDb25uZWN0aW9uXHJcbmNvbnN0IEdyYXBoID0gZ3JlbWxpbi5zdHJ1Y3R1cmUuR3JhcGhcclxuY29uc3QgdXJpID0gcHJvY2Vzcy5lbnYuUkVBREVSXHJcbmNvbnN0IHsgb3JkZXI6IHsgZGVzYyAsIGFzY30gfSA9IGdyZW1saW4ucHJvY2VzcztcclxuY29uc3QgeyBQOiB7IGd0IH0gfSA9IGdyZW1saW4ucHJvY2VzcztcclxuXHJcblxyXG5jb25zdCBuZWFyZXN0SFJSZXN0YXVyYW50ID0gYXN5bmMgKGNpdHk6U3RyaW5nKSA9PiB7XHJcbiAgICBsZXQgZGMgPSBuZXcgRHJpdmVyUmVtb3RlQ29ubmVjdGlvbihgd3NzOi8vJHt1cml9L2dyZW1saW5gLCB7fSlcclxuICAgIGNvbnN0IGdyYXBoID0gbmV3IEdyYXBoKClcclxuICAgIGNvbnN0IGcgPSBncmFwaC50cmF2ZXJzYWwoKS53aXRoUmVtb3RlKGRjKVxyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IGRhdGEgPSBhd2FpdCBnLlYoKS5oYXNMYWJlbCgncmVzdGF1cmFudCcpLmhhcygncmF0aW5nJywgZ3QoNCkpLmhhcygnY2l0eScsIGNpdHkpLnRvTGlzdCgpXHJcbiAgICAgIGxldCBwb3N0cyA9IEFycmF5KClcclxuXHJcbiAgICAgIGZvciAoY29uc3QgdiBvZiBkYXRhKSB7XHJcbiAgICAgICAgY29uc3QgX3Byb3BlcnRpZXMgPSBhd2FpdCBnLlYodi5pZCkucHJvcGVydGllcygpLnRvTGlzdCgpXHJcbiAgICAgICAgbGV0IHBvc3QgPSBfcHJvcGVydGllcy5yZWR1Y2UoKGFjYywgbmV4dCkgPT4ge1xyXG4gICAgICAgICAgYWNjW25leHQubGFiZWxdID0gbmV4dC52YWx1ZVxyXG4gICAgICAgICAgcmV0dXJuIGFjY1xyXG4gICAgICAgIH0sIHt9KVxyXG4gICAgICAgIHBvc3QuaWQgPSB2LmlkXHJcbiAgICAgICAgcG9zdHMucHVzaChwb3N0KVxyXG4gICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgZGMuY2xvc2UoKVxyXG4gICAgICByZXR1cm4gcG9zdHNcclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdFUlJPUicsIGVycilcclxuICAgICAgICByZXR1cm4gbnVsbFxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5lYXJlc3RIUlJlc3RhdXJhbnQiXX0=