{
  "Resources": {
    "ApiF70053CD": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "AuthenticationType": "API_KEY",
        "Name": "cdk-todo-appsync-api"
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/Resource"
      }
    },
    "ApiSchema510EECD7": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Definition": "type Event{\r\n  result:String\r\n}\r\n\r\ntype Query {\r\n    todos: [Todo]\r\n  }\r\n  type Todo {\r\n    id: ID!\r\n    description: String!\r\n  }\r\ninput TodoInput {\r\n    id: ID!\r\n    description: String!\r\n  }\r\n\r\n  type Mutation {\r\n    addTodo(todo: TodoInput!): Event\r\n  }"
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/Schema"
      }
    },
    "ApiDefaultApiKeyF991C37B": {
      "Type": "AWS::AppSync::ApiKey",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        }
      },
      "DependsOn": [
        "ApiSchema510EECD7"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/DefaultApiKey"
      }
    },
    "ApitheTodoTableServiceRole9AB26CF4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/theTodoTable/ServiceRole/Resource"
      }
    },
    "ApitheTodoTableServiceRoleDefaultPolicyC23D3152": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CDKTodoTable66E67402",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApitheTodoTableServiceRoleDefaultPolicyC23D3152",
        "Roles": [
          {
            "Ref": "ApitheTodoTableServiceRole9AB26CF4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/theTodoTable/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ApitheTodoTable61E9D7D1": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Name": "theTodoTable",
        "Type": "AMAZON_DYNAMODB",
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": {
            "Ref": "CDKTodoTable66E67402"
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApitheTodoTableServiceRole9AB26CF4",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/theTodoTable/Resource"
      }
    },
    "ApitheTodoTableQuerytodosResolverBA5337B3": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "todos",
        "TypeName": "Query",
        "DataSourceName": "theTodoTable",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\"version\" : \"2017-02-28\", \"operation\" : \"Scan\"}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result.items)"
      },
      "DependsOn": [
        "ApiSchema510EECD7",
        "ApitheTodoTable61E9D7D1"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/theTodoTable/QuerytodosResolver/Resource"
      }
    },
    "ApidsServiceRoleADC7D124": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/ds/ServiceRole/Resource"
      }
    },
    "ApidsServiceRoleDefaultPolicyE5E18D6D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApidsServiceRoleDefaultPolicyE5E18D6D",
        "Roles": [
          {
            "Ref": "ApidsServiceRoleADC7D124"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/ds/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Apids0DB53FEA": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Name": "httpDsWithEventBridge",
        "Type": "HTTP",
        "Description": "From Appsync to Eventbridge",
        "HttpConfig": {
          "AuthorizationConfig": {
            "AuthorizationType": "AWS_IAM",
            "AwsIamConfig": {
              "SigningRegion": {
                "Ref": "AWS::Region"
              },
              "SigningServiceName": "events"
            }
          },
          "Endpoint": {
            "Fn::Join": [
              "",
              [
                "https://events.",
                {
                  "Ref": "AWS::Region"
                },
                ".amazonaws.com/"
              ]
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApidsServiceRoleADC7D124",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/ds/Resource"
      }
    },
    "ApidsMutationaddTodoResolver390DA5F5": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "addTodo",
        "TypeName": "Mutation",
        "DataSourceName": "httpDsWithEventBridge",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{\n          \"version\": \"2018-05-29\",\n          \"method\": \"POST\", \n          \"resourcePath\": \"/\",\n          \"params\": {\n            \"headers\": {\n              \"content-type\": \"application/x-amz-json-1.1\",\n              \"x-amz-target\":\"AWSEvents.PutEvents\"\n            },\n            \"body\": {\n              \"Entries\":[\n                {\n                  \"DetailType\":\"addTodo\",\n                  \"Source\":\"TodoEvents\",\n                  \"EventBusName\": \"default\",\n                  \"Detail\": \"{\\\"description\\\":\\\"$ctx.args.todo.description\\\"}\"\n                }\n              ]\n            }\n          }\n        }",
        "ResponseMappingTemplate": "\n          #if($ctx.error)\n              $util.error($ctx.error.message, $ctx.error.type)\n          #end\n          #if($ctx.result.statusCode == 200)\n          {\n              \"result\": \"$util.parseJson($ctx.result.body)\"\n          }\n          #else\n              $utils.appendError($ctx.result.body, $ctx.result.statusCode)\n          #end\n      "
      },
      "DependsOn": [
        "Apids0DB53FEA",
        "ApiSchema510EECD7"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerStack/Api/ds/MutationaddTodoResolver/Resource"
      }
    },
    "CDKTodoTable66E67402": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ServerStack/CDKTodoTable/Resource"
      }
    },
    "AppSyncNotesHandlerServiceRole34415D7F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/AppSyncNotesHandler/ServiceRole/Resource"
      }
    },
    "AppSyncNotesHandlerServiceRoleDefaultPolicy12C70C4F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CDKTodoTable66E67402",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CDKTodoTable66E67402",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AppSyncNotesHandlerServiceRoleDefaultPolicy12C70C4F",
        "Roles": [
          {
            "Ref": "AppSyncNotesHandlerServiceRole34415D7F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/AppSyncNotesHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "AppSyncNotesHandler4B870A76": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersa623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30S3Bucket4E815BE5"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30S3VersionKey56374F1B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30S3VersionKey56374F1B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "AppSyncNotesHandlerServiceRole34415D7F",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "DYNAMO_TABLE_NAME": {
              "Ref": "CDKTodoTable66E67402"
            }
          }
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "AppSyncNotesHandlerServiceRoleDefaultPolicy12C70C4F",
        "AppSyncNotesHandlerServiceRole34415D7F"
      ],
      "Metadata": {
        "aws:cdk:path": "ServerStack/AppSyncNotesHandler/Resource",
        "aws:asset:path": "asset.a623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30",
        "aws:asset:property": "Code"
      }
    },
    "theRuleee11DD74A3": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "TodoEvents"
          ]
        },
        "Name": "Rulesfortodo",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "AppSyncNotesHandler4B870A76",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/the-Ruleee/Resource"
      }
    },
    "theRuleeeAllowEventRuleServerStacktheRuleee3E4DA65B28D8247B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AppSyncNotesHandler4B870A76",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "theRuleee11DD74A3",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/the-Ruleee/AllowEventRuleServerStacktheRuleee3E4DA65B"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.91.0,@aws-cdk/assets=1.91.0,@aws-cdk/aws-applicationautoscaling=1.91.0,@aws-cdk/aws-appsync=1.91.0,@aws-cdk/aws-autoscaling=1.91.0,@aws-cdk/aws-autoscaling-common=1.91.0,@aws-cdk/aws-autoscaling-hooktargets=1.91.0,@aws-cdk/aws-cloudwatch=1.91.0,@aws-cdk/aws-codeguruprofiler=1.91.0,@aws-cdk/aws-dynamodb=1.91.0,@aws-cdk/aws-ec2=1.91.0,@aws-cdk/aws-ecr=1.91.0,@aws-cdk/aws-ecr-assets=1.91.0,@aws-cdk/aws-ecs=1.91.0,@aws-cdk/aws-elasticloadbalancingv2=1.91.0,@aws-cdk/aws-events=1.91.0,@aws-cdk/aws-events-targets=1.91.0,@aws-cdk/aws-iam=1.91.0,@aws-cdk/aws-kms=1.91.0,@aws-cdk/aws-lambda=1.91.0,@aws-cdk/aws-logs=1.91.0,@aws-cdk/aws-s3=1.91.0,@aws-cdk/aws-s3-assets=1.91.0,@aws-cdk/aws-servicediscovery=1.91.0,@aws-cdk/aws-sns=1.91.0,@aws-cdk/aws-sns-subscriptions=1.91.0,@aws-cdk/aws-sqs=1.91.0,@aws-cdk/aws-ssm=1.91.0,@aws-cdk/cloud-assembly-schema=1.91.0,@aws-cdk/core=1.91.0,@aws-cdk/custom-resources=1.91.0,@aws-cdk/cx-api=1.91.0,@aws-cdk/region-info=1.91.0,jsii-runtime=node.js/v12.18.3"
      },
      "Metadata": {
        "aws:cdk:path": "ServerStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParametersa623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30S3Bucket4E815BE5": {
      "Type": "String",
      "Description": "S3 bucket for asset \"a623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30\""
    },
    "AssetParametersa623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30S3VersionKey56374F1B": {
      "Type": "String",
      "Description": "S3 key for asset version \"a623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30\""
    },
    "AssetParametersa623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30ArtifactHashC8CB18CF": {
      "Type": "String",
      "Description": "Artifact hash for asset \"a623c943efeff2c51048948749b8e05d7a0708cf44f4e41e45f0cb8f7086fa30\""
    }
  },
  "Outputs": {
    "GraphQLAPIURL": {
      "Value": {
        "Fn::GetAtt": [
          "ApiF70053CD",
          "GraphQLUrl"
        ]
      }
    },
    "GraphQLAPIKey": {
      "Value": {
        "Fn::GetAtt": [
          "ApiDefaultApiKeyF991C37B",
          "ApiKey"
        ]
      }
    },
    "StackRegion": {
      "Value": {
        "Ref": "AWS::Region"
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}